name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.3-alpine3.18
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: customer
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
#    defaults:
#      run:
#        working-directory: ./backend

    steps:
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":":spring-boot: SpringBoot application deployment started :progress_bar: :winter:"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Clone (checkout) repo into `ubuntu-latest` machine that will run our CD
        uses: actions/checkout@v3

      - name: Install required version of Java into `ubuntu-latest`
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'
          cache: 'maven'

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":"Building with Maven :java-logo: :maven:"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build

      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":":docker: Image tag:${{ steps.build-number.outputs.BUILD_NUMBER }} pushed to ${{ secrets.DOCKERHUB_URL }}"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../Dockerrun.aws.json
          sed -i -E 's_(mltechspace/springboot-fullstack-app:)([^"]*)_\1'${{ steps.build-number.outputs.BUILD_NUMBER }}'_' ../Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat ../Dockerrun.aws.json

      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":":aws: Starting deployment to Elastic Beanstalk :fingers_crossed:"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Set up deployment to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json

      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":":githubloading: Committing to GitHub repo at https://github.com/rio-gutierrez/springboot-fullstack-app"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ../Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push

      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":"Commit and deployment succeeded :github_check_mark: "rocket_up:"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":"Job Status ${{ job.status }}"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}